// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(MasterContext))]
    partial class MasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Entities.PhoneShop.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Hided")
                        .HasColumnType("bit")
                        .HasColumnName("hided");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("Phone_id");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("Id")
                        .HasName("Phones_pk")
                        .IsClustered(false);

                    b.ToTable("Phones", "PhoneShop");
                });

            modelBuilder.Entity("Models.Entities.PhoneShop.PriceSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("Phone_id");

                    b.HasKey("Id")
                        .HasName("PriceSubscribers_pk")
                        .IsClustered(false);

                    b.ToTable("PriceSubscribers", "PhoneShop");
                });

            modelBuilder.Entity("Models.Entities.PhoneShop.StockSubscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("Phone_id");

                    b.HasKey("Id")
                        .HasName("StockSubscribers_pk")
                        .IsClustered(false);

                    b.ToTable("StockSubscribers", "PhoneShop");
                });

            modelBuilder.Entity("Models.Entities.RemoteApi.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("slug");

                    b.HasKey("Id")
                        .HasName("Brands_pk")
                        .IsClustered(false);

                    b.ToTable("Brands", "RemoteApi");
                });

            modelBuilder.Entity("Models.Entities.RemoteApi.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("Brand_id");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("slug");

                    b.HasKey("Id")
                        .HasName("Phones_pk")
                        .IsClustered(false);

                    b.ToTable("Phones", "RemoteApi");
                });

            modelBuilder.Entity("Models.Entities.RemoteApi.Specification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("Brand_id");

                    b.Property<string>("Dimension")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("dimension");

                    b.Property<string>("Images")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("images");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("Os")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("os");

                    b.Property<int?>("PhoneId")
                        .HasColumnType("int")
                        .HasColumnName("Phone_id");

                    b.Property<string>("ReleaseDate")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("release_date");

                    b.Property<string>("Specifications")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("specifications");

                    b.Property<string>("Storage")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("storage");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("thumbnail");

                    b.HasKey("Id")
                        .HasName("Specifications_pk")
                        .IsClustered(false);

                    b.ToTable("Specifications", "RemoteApi");
                });
#pragma warning restore 612, 618
        }
    }
}
